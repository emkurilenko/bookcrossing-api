plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
}

group = 'com.bookcrossing'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11

def junitJupiterVersion = '5.4.2'
def testContainerVersion = '1.15.2'

repositories {
    mavenCentral()
}

idea {
    module {
        sourceDirs += file('src/main/generated/')
        generatedSourceDirs += file('src/main/generated/')
    }
}

compileJava {
    options.compilerArgs << "-s"
    options.compilerArgs << "$projectDir/src/main/generated"

    doFirst {
        file(new File(projectDir, "src/main/generated")).mkdirs()
    }
}

clean.doLast {
    // delete sourceSets.generated.java old way
    // clean-up directory when necessary
    file(new File(projectDir, "src/main/generated")).deleteDir()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'

    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.3.3'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    compile('com.querydsl:querydsl-core:4.4.0')
    compile('com.querydsl:querydsl-jpa:4.4.0')
    compile('com.querydsl:querydsl-apt:4.4.0:jpa')

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainerVersion"
    testImplementation "org.testcontainers:postgresql:$testContainerVersion"
    testImplementation "org.testcontainers:testcontainers:$testContainerVersion"
}

dependencies {
    compile "com.querydsl:querydsl-jpa:4.4.0"
    annotationProcessor (
        "com.querydsl:querydsl-apt:4.4.0:jpa",
        "javax.annotation:javax.annotation-api:1.3.2",
    )
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

test {
    useJUnitPlatform()
}
